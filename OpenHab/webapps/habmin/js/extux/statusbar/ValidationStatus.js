/*! HABmin 2014-06-20 */
Ext.define("Ext.ux.statusbar.ValidationStatus",{extend:"Ext.Component",requires:["Ext.util.MixedCollection"],errorIconCls:"x-status-error",errorListCls:"x-status-error-list",validIconCls:"x-status-valid",showText:"The form has errors (click for details...)",hideText:"Click again to hide the error list",submitText:"Saving...",init:function(a){var b=this;b.statusBar=a,a.on({single:!0,scope:b,render:b.onStatusbarRender,beforedestroy:b.destroy}),a.on({click:{element:"el",fn:b.onStatusClick,scope:b,buffer:200}})},onStatusbarRender:function(a){var b=this,c=function(){b.monitor=!0};b.monitor=!0,b.errors=Ext.create("Ext.util.MixedCollection"),b.listAlign="right"===a.statusAlign?"br-tr?":"bl-tl?",b.form&&(b.formPanel=Ext.getCmp(b.form),b.basicForm=b.formPanel.getForm(),b.startMonitoring(),b.basicForm.on("beforeaction",function(a,c){"submit"===c.type&&(b.monitor=!1)}),b.basicForm.on("actioncomplete",c),b.basicForm.on("actionfailed",c))},startMonitoring:function(){this.basicForm.getFields().each(function(a){a.on("validitychange",this.onFieldValidation,this)},this)},stopMonitoring:function(){this.basicForm.getFields().each(function(a){a.un("validitychange",this.onFieldValidation,this)},this)},onDestroy:function(){this.stopMonitoring(),this.statusBar.statusEl.un("click",this.onStatusClick,this),this.callParent(arguments)},onFieldValidation:function(a){var b,c=this;return c.monitor?(b=a.getErrors()[0],b?c.errors.add(a.id,{field:a,msg:b}):c.errors.removeAtKey(a.id),this.updateErrorList(),void(c.errors.getCount()>0?c.statusBar.getText()!==c.showText&&c.statusBar.setStatus({text:c.showText,iconCls:c.errorIconCls}):c.statusBar.clearStatus().setIcon(c.validIconCls))):!1},updateErrorList:function(){var a,b=this,c=b.getMsgEl();b.errors.getCount()>0?(a=["<ul>"],this.errors.each(function(b){a.push('<li id="x-err-',b.field.id,'"><a href="#">',b.msg,"</a></li>")}),a.push("</ul>"),c.update(a.join(""))):c.update(""),c.setSize("auto","auto")},getMsgEl:function(){var a,b=this,c=b.msgEl;return c||(c=b.msgEl=Ext.DomHelper.append(Ext.getBody(),{cls:b.errorListCls},!0),c.hide(),c.on("click",function(c){a=c.getTarget("li",10,!0),a&&(Ext.getCmp(a.id.split("x-err-")[1]).focus(),b.hideErrors())},null,{stopEvent:!0})),c},showErrors:function(){var a=this;a.updateErrorList(),a.getMsgEl().alignTo(a.statusBar.getEl(),a.listAlign).slideIn("b",{duration:300,easing:"easeOut"}),a.statusBar.setText(a.hideText),a.formPanel.body.on("click",a.hideErrors,a,{single:!0})},hideErrors:function(){var a=this.getMsgEl();a.isVisible()&&(a.slideOut("b",{duration:300,easing:"easeIn"}),this.statusBar.setText(this.showText)),this.formPanel.body.un("click",this.hideErrors,this)},onStatusClick:function(){this.getMsgEl().isVisible()?this.hideErrors():this.errors.getCount()>0&&this.showErrors()}});